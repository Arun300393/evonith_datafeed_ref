# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - evonith-datafeed-webapp

on:
  push:
    branches:
      - DEV
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Create .env file from secrets
        run: |
          echo "USERNAME_REALTIMEDATA=${{ secrets.USERNAME_REALTIMEDATA }}" >> .env
          echo "PASSWORD_REALTIMEDATA=${{ secrets.PASSWORD_REALTIMEDATA }}" >> .env
          echo "TOKEN=${{ secrets.TOKEN }}" >> .env

      - name: Display .env file (for debugging, optional)
        run: cat .env
        env:
          USERNAME_REALTIMEDATA: ${{ secrets.USERNAME_REALTIMEDATA }}
          PASSWORD_REALTIMEDATA: ${{ secrets.PASSWORD_REALTIMEDATA }}
          TOKEN: ${{ secrets.TOKEN }}

      # Step 3: Create and activate virtual environment
      - name: Create and activate virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run app.py
        run: |
          source .venv/bin/activate
          timeout 10s python src/app.py 2>/dev/null
          ls -ltra data
      
      - name: Check if directory is empty
        run: |
          DIR="data"
          if [ -d "$DIR" ]; then
            if [ -z "$(ls -A $DIR)" ]; then
              echo "Directory $DIR is empty."
              exit 1
            else
              echo "Directory $DIR is not empty."
            fi
          else
            echo "Directory $DIR does not exist."
            exit 1
          fi
          
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      # - name: Zip artifact for deployment
      #   run: zip release.zip ./* -r

      # - name: Upload artifact for deployment jobs
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: python-app
      #     path: |
      #       release.zip
      #       !venv/

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   permissions:
  #     id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-app

  #     - name: Unzip artifact for deployment
  #       run: unzip release.zip

      
  #     - name: Login to Azure
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F2CBC1670E14447C9F4E2834ED6CC6B4 }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_957F51C87A26470BB59D0CEF5DB5A53A }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F95354A9182F4BB4A184DADCF18F0E47 }}

  #     - name: 'Deploy to Azure Web App'
  #       uses: azure/webapps-deploy@v3
  #       id: deploy-to-webapp
  #       with:
  #         app-name: 'evonith-datafeed-webapp'
  #         slot-name: 'Production'
          
